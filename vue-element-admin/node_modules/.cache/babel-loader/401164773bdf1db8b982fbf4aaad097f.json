{"remainingRequest":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/node_modules/thread-loader/dist/cjs.js!/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/src/views/pdf/content.js","dependencies":[{"path":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/src/views/pdf/content.js","mtime":1685687938550},{"path":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/babel.config.js","mtime":1685687938523},{"path":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1685688829009},{"path":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/node_modules/thread-loader/dist/cjs.js","mtime":1685688828966},{"path":"/Users/fdoemges/local/workspaces/privat/kogniswarm/kogniswarm/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":1685688829532}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}